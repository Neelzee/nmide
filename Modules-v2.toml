# Package manager that is used
package-manager = "bun"

# Split module installation and declaration into runtime and compile-time,
# instead of having each module having to declare itself
[runtime]

# If the runtime module is enabled
enabled = false

# Should module installation be more modular? Maybe define invocation of
# some external program to _install_ a module kind?

# ts modules
ts = [{ path = "modules/jsm-counter/" }]

rust = [{ path = "modules/rs-counter-plugin-example/" }]

files = ["modules/rs-counter-plugin-example/rt-style.css"]


[compile-time]

typescript = [
  { path = "modules/ide-errors/" },
  { path = "modules/ide_explorer/" },
  { path = "modules/ide-editor/" },
  { path = "modules/dependency-viewer" },
  { path = "modules/event_sender" },
  { path = "modules/state_viz" },
  { path = "modules/ide_save/" },
  # Can specify build-output, which means that the files in the specified
  # directory, should be copied to the module installation directory.
  # The path is relative to the path specified on the module instance.
  { path = "modules/ide-js/", build-output = "build/" },
]

rust = [
  { path = "modules/trivial_module/" },
  { path = "modules/magnolia_dependency/" },
  { path = "modules/rust_dependency/" },
  { path = "modules/ide_fsa/" },
  { path = "modules/ide_framework/" },
  { path = "modules/ide_pm/" },
  { path = "modules/ide_tabs/" },
  { path = "modules/ide_cache/" },
  { path = "modules/ide_explorer/" },
  { path = "modules/tab_wrapper/" },
  { path = "modules/module_installer/" },
]

css = [
  { path = "modules/trivial_module/" },
  { path = "modules/ide_framework/" },
  { path = "modules/ide_tabs/" },
  { path = "modules/ide_pm_style/" },
  { path = "modules/ide_explorer/" },
  { path = "modules/ide-editor/" },
  { path = "modules/dependency-viewer" },
  { path = "modules/event_sender" },
  { path = "modules/state_viz" },
  { path = "modules/module_installer/" },
]

# We can also copy files from a specified directory to the module directory
files = ["modules/ide_explorer/magnolia.png"]
