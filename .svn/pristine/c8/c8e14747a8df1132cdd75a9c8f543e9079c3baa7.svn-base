\section{Nomenclature}

\begin{definition}[Frontend]
  The application is divided into two parts. The Frontend and Backend. The
  Frontend is referring to the code found in core/app. It communicates with the
  Backend with a wrapper around the Tauri client from the Tauri framework.
\end{definition}

\begin{definition}[Backend]
  The application is divided into two parts. The Frontend and Backend. The
  Backend is referring to the code found in core/src-tauri. It is responsible
  for handling the Event system
\end{definition}

\begin{definition}[Event]
  Communication between Modules occur using Events. An event can have a name,
  and some argument. When a Module registrates a handler, it does so using the
  name of an Event it wants to handle
\end{definition}

\begin{definition}[Foreign Modules]
  The application supports JavaScript and Rust Modules, out of the Box. In this
  context, when using the term \textit{support}, we use it to mean that there is
  no difference between writing a Module in one language or another, except
  syntactically. Writing in JavaScript or Rust should be a matter of preference,
  and not necessaty. It also means that translating between two different
  languages should be a syntacticall challange, not a semantical one.
\end{definition}