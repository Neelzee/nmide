\section{25.05.01}

Taking a break from writing, doing some development, since I've handed a draft
in for feedback. But now I am finding a lot of grammatical mistakes everywhere.

I should note the need for a more specialized optimization in appendix A, as
we can optimize instructions across the type parameter, based on if the node a
text or attr instruction wants to modify, exists or not.

I can also add a lot of text about the module-tester implementation, as that is
what I have been working on. At least the Rust side. I think I can finish some
basic analyzing today.

\section{25.05.08}

Given myself the timeline of being finished with modules by Sunday, 11th, and
just write until I have to hand it in. I've been working on the dependency graph
viewer, but it doesn't work, and other IDE stuff, which doesn't work. For some
reason my File-System-Abstraction layer doesn't work correctly. It doesn't get
or reacts to events. If I can't get it to work by tomorrow, I'll just "cheat" by
letting modules do their own file system stuff. In either case, the IDE will
look "proper", by the end, at least.

Some stuff I want to do:

\begin{itemize}
  \item Make some LS module
  \item Make an Editor module
  \item Make a module with Haskell?
\end{itemize}

I am unsure how to do the last one, I don't think I have the time to get it too
work. I am also unsure how to do the LS stuff, properly, I think I'll do a
half-arsed one, where I am invoking some Haskell wrapper around the compiler,
to get the stuff I want. I can then do some hand-waving, and say that stuff
works, even if it doesn't.


\section{25.05.10}

Got my favourite kind of bug, one that randomly happens. I think this is just
skill issue, where I don't know how to do this kind of module architecture. I
do forsee some issues about events being thrown before anyone can handle them,
so maybe I should look into some channel system, as I do with CoreModifications
but maybe optional, so modules can choose if they want all previous Events or
not.


\section{25.05.12}

Got some feedback on my Chandra draft. Pretty detailed, I've made a lot of
grammatical mistakes, which I need to fix.


\section{25.05.14}

As a final sprint on the implementation side, I want to make tools for module
developers.

\begin{enumerate}
  \item Debug Module Tool
  \item Module Dependency Graph Viewer
  \item Boilerplate Code Generation
\end{enumerate}

The first one, is quite simple, as all I need, is the core application, and add
an easy way to remove/add modules during runtime.

\section{25.05.23}

For the defense

\begin{enumerate}
  \item Mention MORE things in related work, to avoid weak points for them to
    attack
  \item Mention we are using the \textit{Magnolia Approach} when we designed
    this IDE
  \item Mention explicitly that the features we showcase are from modules
\end{enumerate}
