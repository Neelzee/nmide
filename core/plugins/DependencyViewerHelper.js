window.plugins.set(
  "DependencyViewerHelper",
  {
    init: () => [],
    update: (_, __) => [],
    view: (_) => {
      return {
        kind: "frag",
        kids: [],
        text: null,
        attrs: [],
      };
    },
    render: (graph) => {
      const width = 1280
      const height = 720

      async function populateGraph() {

        const svg = d3.select("#graph svg")

        //const data = { "links": [{ "source": "Basic.MultitypeOperations", "target": "Basic.FiniteInteger," }, { "source": "Basic.MultitypeOperations", "target": "Basic.FiniteReal," }, { "source": "Basic.MultitypeOperations", "target": "Mathematics.Numbers," }, { "source": "Basic.MultitypeOperations", "target": "Fundamentals.SymbolRenamings" }, { "source": "TutorialExamples.Tutorial7Cxx", "target": "Basic.FiniteInteger," }, { "source": "TutorialExamples.Tutorial7Cxx", "target": "BasicCxx.IntegerCxx," }, { "source": "TutorialExamples.Tutorial7Cxx", "target": "BasicCxx.FloatCxx" }, { "source": "BasicGeneral.IntegerOperations", "target": "Basic.FiniteInteger," }, { "source": "BasicGeneral.IntegerOperations", "target": "Basic.Loops," }, { "source": "BasicGeneral.IntegerOperations", "target": "Fundamentals.Equivalence," }, { "source": "BasicGeneral.IntegerOperations", "target": "Fundamentals.Lattice," }, { "source": "BasicGeneral.IntegerOperations", "target": "Fundamentals.Monoid," }, { "source": "BasicGeneral.IntegerOperations", "target": "Mathematics.Group," }, { "source": "BasicGeneral.IntegerOperations", "target": "Mathematics.Numbers," }, { "source": "BasicGeneral.IntegerOperations", "target": "Mathematics.Ring," }, { "source": "BasicGeneral.IntegerOperations", "target": "Fundamentals.SymbolRenamings" }, { "source": "s", "target": "Fundamentals.Equivalence," }, { "source": "s", "target": "Fundamentals.Exponents," }, { "source": "s", "target": "Fundamentals.Lattice," }, { "source": "s", "target": "Fundamentals.Morphisms," }, { "source": "s", "target": "Fundamentals.SymbolRenamings," }, { "source": "s", "target": "Mathematics.Field," }, { "source": "s", "target": "Mathematics.Group," }, { "source": "s", "target": "Mathematics.Ring" }, { "source": "Collections.DictionaryImplementations", "target": "Collections.Dictionary," }, { "source": "Collections.DictionaryImplementations", "target": "Basic.BoundedArray," }, { "source": "Collections.DictionaryImplementations", "target": "Mathematics.Array" }, { "source": "TutorialExamples.Tutorial2Cxx", "target": "BasicCxx.IntegerCxx" }, { "source": "Collections.DictionaryImplementationsCxx", "target": "Collections.Dictionary," }, { "source": "Collections.DictionaryImplementationsCxx", "target": "Collections.DictionaryImplementations," }, { "source": "Collections.DictionaryImplementationsCxx", "target": "Basic.FiniteInteger," }, { "source": "Collections.DictionaryImplementationsCxx", "target": "BasicCxx.FloatCxx," }, { "source": "Collections.DictionaryImplementationsCxx", "target": "BasicCxx.DynamicArrayCxx," }, { "source": "Collections.DictionaryImplementationsCxx", "target": "BasicCxx.LoopsCxx," }, { "source": "Collections.DictionaryImplementationsCxx", "target": "BasicCxx.StringCxx," }, { "source": "Collections.DictionaryImplementationsCxx", "target": "BasicGeneral.ArrayFilter," }, { "source": "Collections.DictionaryImplementationsCxx", "target": "Fundamentals.SymbolRenamings" }, { "source": "Basic.String", "target": "Fundamentals.Equivalence," }, { "source": "Basic.String", "target": "Fundamentals.Monoid" }, { "source": "Indexable.Indexable", "target": "Fundamentals.Morphisms" }, { "source": ":", "target": "Fundamentals.SymbolRenamings" }, { "source": "BasicGeneral.ArrayMap", "target": "Basic.BoundedArray," }, { "source": "BasicGeneral.ArrayMap", "target": "Basic.FiniteInteger," }, { "source": "BasicGeneral.ArrayMap", "target": "Basic.Loops," }, { "source": "BasicGeneral.ArrayMap", "target": "BasicGeneral.IndexableWrapper," }, { "source": "BasicGeneral.ArrayMap", "target": "Fundamentals.Monoid," }, { "source": "BasicGeneral.ArrayMap", "target": "Fundamentals.SymbolRenamings," }, { "source": "BasicGeneral.ArrayMap", "target": "Fundamentals.TuplesImplementation" }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "//" }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "Basic.FiniteInteger," }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "//" }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "Basic.FiniteReal," }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "Basic.BoundedArray," }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "BasicCxx.DynamicArrayCxx," }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "//" }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "BasicCxx.FloatCxx," }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "//" }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "BasicGeneral.ArrayMap," }, { "source": "BasicGeneral.ArrayMapCxxDemo", "target": "BasicGeneral.ArrayMapCxx" }, { "source": "BasicCxxExamples.IntegerCxxDemo", "target": "Basic.FiniteInteger," }, { "source": "BasicCxxExamples.IntegerCxxDemo", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicCxxExamples.IntegerCxxDemo", "target": "Fundamentals.Morphisms," }, { "source": "BasicCxxExamples.IntegerCxxDemo", "target": "Fundamentals.SymbolRenamings" }, { "source": "Fundamentals.TuplesImplementation", "target": "Fundamentals.Tuples" }, { "source": "BasicCxxRaw.StringCxxRawTest", "target": "BasicCxxRaw.StringCxxRaw" }, { "source": "Fundamentals.Exponents", "target": "Fundamentals.Morphisms," }, { "source": "Fundamentals.Exponents", "target": "Fundamentals.Semiring," }, { "source": "Fundamentals.Exponents", "target": "Fundamentals.SymbolRenamings" }, { "source": "TutorialExamples.Tutorial1Cxx", "target": "BasicCxx.IntegerCxx" }, { "source": "BasicCxxExamples.FloatCxxDemo", "target": "Basic.FiniteReal," }, { "source": "BasicCxxExamples.FloatCxxDemo", "target": "BasicCxx.FloatCxx," }, { "source": "BasicCxxExamples.FloatCxxDemo", "target": "Fundamentals.SymbolRenamings" }, { "source": ".", "target": "Fundamentals.Semiring" }, { "source": "Collections.DictionaryCxxDemo", "target": "Basic.FiniteInteger," }, { "source": "Collections.DictionaryCxxDemo", "target": "BasicCxx.FloatCxx," }, { "source": "Collections.DictionaryCxxDemo", "target": "BasicCxx.DynamicArrayCxx," }, { "source": "Collections.DictionaryCxxDemo", "target": "BasicCxx.StringCxx," }, { "source": "Collections.DictionaryCxxDemo", "target": "BasicGeneral.ArrayFilter," }, { "source": "Collections.DictionaryCxxDemo", "target": "Collections.Dictionary," }, { "source": "Collections.DictionaryCxxDemo", "target": "Collections.DictionaryImplementations," }, { "source": "Collections.DictionaryCxxDemo", "target": "Collections.DictionaryImplementationsCxx," }, { "source": "Collections.DictionaryCxxDemo", "target": "Fundamentals.SymbolRenamings" }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "//" }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "Basic.FiniteInteger," }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "//" }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "Basic.FiniteReal," }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "Basic.BoundedArray," }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "BasicCxx.DynamicArrayCxx," }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "//" }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "BasicCxx.FloatCxx," }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "BasicCxx.LoopsCxx," }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "BasicGeneral.ArrayFilter," }, { "source": "BasicGeneral.ArrayFilterCxxDemo", "target": "Fundamentals.SymbolRenamings" }, { "source": "Collections.Dictionary", "target": "Indexable.Indexable" }, { "source": "Mathematics.Field", "target": "Fundamentals.Monoid," }, { "source": "Mathematics.Field", "target": "Fundamentals.Equivalence," }, { "source": "Mathematics.Field", "target": "Mathematics.Group," }, { "source": "Mathematics.Field", "target": "Mathematics.Ring" }, { "source": "BasicCxxRaw.StringCxxRaw", "target": "BasicCxx.IntegerCxx" }, { "source": "TutorialExamples.Tutorial5Cxx", "target": "TutorialExamples.Tutorial3Cxx," }, { "source": "TutorialExamples.Tutorial5Cxx", "target": "BasicCxx.IntegerCxx," }, { "source": "TutorialExamples.Tutorial5Cxx", "target": "BasicCxx.FloatCxx" }, { "source": "BasicGeneral.Colour", "target": "Basic.FiniteInteger," }, { "source": "BasicGeneral.Colour", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicGeneral.Colour", "target": "BasicGeneral.IntegerOperations" }, { "source": "Indexable.IndexableMap", "target": "Indexable.Indexable," }, { "source": "Indexable.IndexableMap", "target": "Fundamentals.Monoid," }, { "source": "Indexable.IndexableMap", "target": "Fundamentals.Tuples" }, { "source": "BasicCxxRaw.BoundedArrayCxxRawTest", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicCxxRaw.BoundedArrayCxxRawTest", "target": "BasicCxx.FloatCxx," }, { "source": "BasicCxxRaw.BoundedArrayCxxRawTest", "target": "BasicCxx.MultitypeOperationsCxx," }, { "source": "BasicCxxRaw.BoundedArrayCxxRawTest", "target": "BasicCxxRaw.BoundedArrayCxxRaw," }, { "source": "BasicCxxRaw.BoundedArrayCxxRawTest", "target": "Fundamentals.Monoid," }, { "source": "BasicCxxRaw.BoundedArrayCxxRawTest", "target": "Fundamentals.SymbolRenamings" }, { "source": "BasicCxxRaw.MultitypeOperationsCxxRawTest", "target": "BasicCxx.FloatCxx," }, { "source": "BasicCxxRaw.MultitypeOperationsCxxRawTest", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicCxxRaw.MultitypeOperationsCxxRawTest", "target": "BasicCxxRaw.MultitypeOperationsCxxRaw" }, { "source": "BasicCxxRaw.BoundedArrayCxxRaw", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicCxxRaw.BoundedArrayCxxRaw", "target": "Fundamentals.SymbolRenamings" }, { "source": "BasicCxx.MultitypeOperationsCxx", "target": "Basic.FiniteReal," }, { "source": "BasicCxx.MultitypeOperationsCxx", "target": "Basic.FiniteInteger," }, { "source": "BasicCxx.MultitypeOperationsCxx", "target": "Basic.MultitypeOperations," }, { "source": "BasicCxx.MultitypeOperationsCxx", "target": "BasicCxxRaw.MultitypeOperationsCxxRaw," }, { "source": "BasicCxx.MultitypeOperationsCxx", "target": "Fundamentals.SymbolRenamings" }, { "source": "BasicCxx.StringCxx", "target": "Basic.String," }, { "source": "BasicCxx.StringCxx", "target": "BasicCxxRaw.StringCxxRaw" }, { "source": "Fundamentals.Semiring", "target": "Fundamentals.Monoid" }, { "source": "Mathematics.Group", "target": "Fundamentals.Equivalence," }, { "source": "Mathematics.Group", "target": "Fundamentals.Lattice," }, { "source": "Mathematics.Group", "target": "Fundamentals.Monoid," }, { "source": "Mathematics.Group", "target": "Fundamentals.Morphisms" }, { "source": "BasicGeneral.FloatOperations", "target": "//" }, { "source": "BasicGeneral.FloatOperations", "target": "Basic.FiniteInteger," }, { "source": "BasicGeneral.FloatOperations", "target": "//" }, { "source": "BasicGeneral.FloatOperations", "target": "Basic.FiniteReal," }, { "source": "BasicGeneral.FloatOperations", "target": "//" }, { "source": "BasicGeneral.FloatOperations", "target": "Basic.MultitypeOperations," }, { "source": "BasicGeneral.FloatOperations", "target": "//" }, { "source": "BasicGeneral.FloatOperations", "target": "BasicCxx.FloatCxx," }, { "source": "BasicGeneral.FloatOperations", "target": "//" }, { "source": "BasicGeneral.FloatOperations", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicGeneral.FloatOperations", "target": "//" }, { "source": "BasicGeneral.FloatOperations", "target": "BasicCxx.MultitypeOperationsCxx," }, { "source": "BasicGeneral.FloatOperations", "target": "//" }, { "source": "BasicGeneral.FloatOperations", "target": "BasicGeneral.IntegerOperations," }, { "source": "BasicGeneral.FloatOperations", "target": "Fundamentals.SymbolRenamings," }, { "source": "BasicGeneral.FloatOperations", "target": "Mathematics.Ring" }, { "source": "BasicCxx.IntegerCxx", "target": "Basic.FiniteInteger," }, { "source": "BasicCxx.IntegerCxx", "target": "BasicCxx.FloatCxx," }, { "source": "BasicCxx.IntegerCxx", "target": "BasicCxxRaw.IntegerCxxRaw," }, { "source": "BasicCxx.IntegerCxx", "target": "Fundamentals.Equivalence," }, { "source": "BasicCxx.IntegerCxx", "target": "Fundamentals.Morphisms," }, { "source": "BasicCxx.IntegerCxx", "target": "Fundamentals.SymbolRenamings" }, { "source": "BasicGeneral.ArrayNumberCxxDemo", "target": "BasicCxx.FloatCxx," }, { "source": "BasicGeneral.ArrayNumberCxxDemo", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicGeneral.ArrayNumberCxxDemo", "target": "BasicGeneral.ArrayNumberCxx," }, { "source": "BasicGeneral.ArrayNumberCxxDemo", "target": "BasicGeneral.IntegerOperations," }, { "source": "BasicGeneral.ArrayNumberCxxDemo", "target": "Fundamentals.SymbolRenamings" }, { "source": "BasicGeneral.IntegerOperationsCxxDemo", "target": "Basic.FiniteReal," }, { "source": "BasicGeneral.IntegerOperationsCxxDemo", "target": "BasicCxx.FloatCxx," }, { "source": "BasicGeneral.IntegerOperationsCxxDemo", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicGeneral.IntegerOperationsCxxDemo", "target": "BasicGeneral.IntegerOperations," }, { "source": "BasicGeneral.IntegerOperationsCxxDemo", "target": "BasicGeneral.IntegerOperationsCxx," }, { "source": "BasicGeneral.IntegerOperationsCxxDemo", "target": "Fundamentals.Lattice," }, { "source": "BasicGeneral.IntegerOperationsCxxDemo", "target": "Fundamentals.SymbolRenamings," }, { "source": "BasicGeneral.IntegerOperationsCxxDemo", "target": "Mathematics.Numbers" }, { "source": "Mathematics.Array", "target": "Fundamentals.Equivalence," }, { "source": "Mathematics.Array", "target": "Fundamentals.Monoid," }, { "source": "Mathematics.Array", "target": "//" }, { "source": "Mathematics.Array", "target": "For" }, { "source": "Mathematics.Array", "target": "the" }, { "source": "Mathematics.Array", "target": "scan" }, { "source": "Mathematics.Array", "target": "and" }, { "source": "Mathematics.Array", "target": "fold" }, { "source": "Mathematics.Array", "target": "operations" }, { "source": "Mathematics.Array", "target": "Fundamentals.Morphisms," }, { "source": "Mathematics.Array", "target": "Fundamentals.SymbolRenamings," }, { "source": "Mathematics.Array", "target": "//" }, { "source": "Mathematics.Array", "target": "Fundamentals.Topology," }, { "source": "Mathematics.Array", "target": "Indexable.Indexable," }, { "source": "Mathematics.Array", "target": "Indexable.IndexableMap," }, { "source": "Mathematics.Array", "target": "//" }, { "source": "Mathematics.Array", "target": "For" }, { "source": "Mathematics.Array", "target": "the" }, { "source": "Mathematics.Array", "target": "scan" }, { "source": "Mathematics.Array", "target": "and" }, { "source": "Mathematics.Array", "target": "fold" }, { "source": "Mathematics.Array", "target": "operations" }, { "source": "Mathematics.Array", "target": "//" }, { "source": "Mathematics.Array", "target": "Indexable.IndexRegionMap," }, { "source": "Mathematics.Array", "target": "Mathematics.Numbers" }, { "source": "BasicGeneral.IntegerOperationsCxx", "target": "Basic.FiniteInteger," }, { "source": "BasicGeneral.IntegerOperationsCxx", "target": "BasicCxx.LoopsCxx," }, { "source": "BasicGeneral.IntegerOperationsCxx", "target": "BasicGeneral.IntegerOperations," }, { "source": "BasicGeneral.IntegerOperationsCxx", "target": "Fundamentals.Monoid," }, { "source": "BasicGeneral.IntegerOperationsCxx", "target": "Mathematics.Group" }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "Basic.BoundedArray," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "Basic.FiniteInteger," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "Basic.FiniteReal," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "Basic.Loops," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "Basic.MultitypeOperations," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "BasicCxx.DynamicArrayCxx," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "BasicCxx.FloatCxx," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "BasicCxx.IntegerCxx," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "BasicCxx.LoopsCxx," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "BasicCxx.MultitypeOperationsCxx," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "BasicGeneral.IntegerOperations," }, { "source": "TutorialExamples.Tutorial9Cxx", "target": "Fundamentals.SymbolRenamings" }, { "source": "Collections.LinearCxxDemo", "target": "Collections.Linear," }, { "source": "Collections.LinearCxxDemo", "target": "Collections.LinearImplementationArray," }, { "source": "Collections.LinearCxxDemo", "target": "BasicCxx.DynamicArrayCxx," }, { "source": "Collections.LinearCxxDemo", "target": "BasicCxx.FloatCxx," }, { "source": "Collections.LinearCxxDemo", "target": "BasicCxx.IntegerCxx" }, { "source": "TutorialExamples.Tutorial6Cxx", "target": "BasicCxx.IntegerCxx," }, { "source": "TutorialExamples.Tutorial6Cxx", "target": "BasicCxx.FloatCxx" }, { "source": "TutorialExamples.Tutorial0Cxx", "target": "BasicCxx.StringCxx" }, { "source": "TutorialExamples.Tutorial4Cxx", "target": "BasicCxx.IntegerCxx," }, { "source": "TutorialExamples.Tutorial4Cxx", "target": "BasicCxx.FloatCxx" }, { "source": "BasicGeneral.ArrayFilter", "target": "Basic.BoundedArray," }, { "source": "BasicGeneral.ArrayFilter", "target": "Basic.FiniteInteger," }, { "source": "BasicGeneral.ArrayFilter", "target": "Basic.Loops," }, { "source": "BasicGeneral.ArrayFilter", "target": "Fundamentals.SymbolRenamings" }, { "source": "BasicCxxExamples.StringCxxDemo", "target": "BasicCxx.DynamicArrayCxx," }, { "source": "BasicCxxExamples.StringCxxDemo", "target": "BasicCxx.LoopsCxx," }, { "source": "BasicCxxExamples.StringCxxDemo", "target": "BasicCxx.StringCxx," }, { "source": "BasicCxxExamples.StringCxxDemo", "target": "BasicGeneral.ArrayFilter," }, { "source": "BasicCxxExamples.StringCxxDemo", "target": "Fundamentals.SymbolRenamings" }, { "source": "BasicGeneral.IndexableWrapper", "target": "Basic.BoundedArray," }, { "source": "BasicGeneral.IndexableWrapper", "target": "Basic.FiniteInteger," }, { "source": "BasicGeneral.IndexableWrapper", "target": "Fundamentals.SymbolRenamings," }, { "source": "BasicGeneral.IndexableWrapper", "target": "Fundamentals.Tuples," }, { "source": "BasicGeneral.IndexableWrapper", "target": "Fundamentals.TuplesImplementation," }, { "source": "BasicGeneral.IndexableWrapper", "target": "Indexable.Indexable," }, { "source": "BasicGeneral.IndexableWrapper", "target": "Mathematics.Array" }, { "source": "BasicCxxRaw.MultitypeOperationsCxxRaw", "target": "Basic.MultitypeOperations" }, { "source": "Collections.LinearImplementationArray", "target": "Collections.Linear," }, { "source": "Collections.LinearImplementationArray", "target": "Basic.BoundedArray" }, { "source": "TutorialExamples.Tutorial3Cxx", "target": "BasicCxx.IntegerCxx," }, { "source": "TutorialExamples.Tutorial3Cxx", "target": "BasicCxx.FloatCxx," }, { "source": "TutorialExamples.Tutorial3Cxx", "target": "BasicCxx.StringCxx" }, { "source": "defines", "target": "Fundamentals.Equivalence," }, { "source": "defines", "target": "//" }, { "source": "defines", "target": "For" }, { "source": "defines", "target": "lifting" }, { "source": "defines", "target": "the" }, { "source": "defines", "target": "order" }, { "source": "defines", "target": "operations" }, { "source": "defines", "target": "Fundamentals.Monoid," }, { "source": "defines", "target": "//" }, { "source": "defines", "target": "For" }, { "source": "defines", "target": "folds" }, { "source": "defines", "target": "and" }, { "source": "defines", "target": "scans" }, { "source": "defines", "target": "Fundamentals.SymbolRenamings," }, { "source": "defines", "target": "Indexable.Indexable," }, { "source": "defines", "target": "Indexable.IndexableMap," }, { "source": "defines", "target": "Mathematics.Array," }, { "source": "defines", "target": "//" }, { "source": "defines", "target": "For" }, { "source": "defines", "target": "folds," }, { "source": "defines", "target": "scans" }, { "source": "defines", "target": "and" }, { "source": "defines", "target": "free" }, { "source": "defines", "target": "modules" }, { "source": "defines", "target": "Mathematics.Numbers," }, { "source": "defines", "target": "Mathematics.Ring" }, { "source": "contains", "target": "Mathematics.Numbers" }, { "source": "Mathematics.Ring", "target": "Fundamentals.Equivalence," }, { "source": "Mathematics.Ring", "target": "Fundamentals.Lattice," }, { "source": "Mathematics.Ring", "target": "Fundamentals.Monoid," }, { "source": "Mathematics.Ring", "target": "Fundamentals.Semiring," }, { "source": "Mathematics.Ring", "target": "Mathematics.Group" }, { "source": "BasicCxxRaw.FloatCxxRaw", "target": "Basic.FiniteReal," }, { "source": "BasicCxxRaw.FloatCxxRaw", "target": "BasicCxxRaw.FloatCxxRaw," }, { "source": "BasicCxxRaw.FloatCxxRaw", "target": "Fundamentals.Equivalence," }, { "source": "BasicCxxRaw.FloatCxxRaw", "target": "Fundamentals.SymbolRenamings," }, { "source": "BasicCxxRaw.FloatCxxRaw", "target": "Mathematics.Numbers," }, { "source": "BasicCxxRaw.FloatCxxRaw", "target": "Mathematics.Ring" }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "Basic.FiniteInteger," }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "Basic.FiniteReal," }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "Basic.BoundedArray," }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "BasicCxx.DynamicArrayCxx," }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "BasicCxx.FloatCxx," }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "Fundamentals.Monoid," }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "Fundamentals.Morphisms," }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "Fundamentals.Semiring," }, { "source": "BasicCxxExamples.ArrayCxxDemo", "target": "Fundamentals.SymbolRenamings" }, { "source": "Fundamentals.Lattice", "target": "Fundamentals.Equivalence," }, { "source": "Fundamentals.Lattice", "target": "Fundamentals.Monoid," }, { "source": "Fundamentals.Lattice", "target": "Fundamentals.Semiring" }, { "source": "BasicCxx.DynamicArrayCxx", "target": "Basic.BoundedArray," }, { "source": "BasicCxx.DynamicArrayCxx", "target": "BasicCxx.IntegerCxx," }, { "source": "BasicCxx.DynamicArrayCxx", "target": "BasicCxxRaw.BoundedArrayCxxRaw," }, { "source": "BasicCxx.DynamicArrayCxx", "target": "BasicGeneral.IndexableWrapper," }, { "source": "BasicCxx.DynamicArrayCxx", "target": "Fundamentals.Monoid," }, { "source": "BasicCxx.DynamicArrayCxx", "target": "Fundamentals.SymbolRenamings," }, { "source": "BasicCxx.DynamicArrayCxx", "target": "Fundamentals.TuplesImplementation" }, { "source": "BasicCxx.DynamicArrayCxx", "target": "//" }, { "source": "BasicCxx.DynamicArrayCxx", "target": "Mathematics.Array," }, { "source": "BasicCxx.DynamicArrayCxx", "target": "//" }, { "source": "BasicCxx.DynamicArrayCxx", "target": "Indexable.Indexable," }, { "source": "BasicCxx.DynamicArrayCxx", "target": "//" }, { "source": "BasicCxx.DynamicArrayCxx", "target": "Indexable.IndexableMap," }], "nodes": [{ "id": "Fundamentals.Monoid;" }, { "id": "Basic.MultitypeOperations" }, { "id": "TutorialExamples.Tutorial7Cxx" }, { "id": "BasicGeneral.IntegerOperations" }, { "id": "s" }, { "id": "Collections.DictionaryImplementations" }, { "id": "Fundamentals.Tuples;" }, { "id": "TutorialExamples.Tutorial2Cxx" }, { "id": "Collections.DictionaryImplementationsCxx" }, { "id": "Basic.String" }, { "id": "Indexable.Indexable" }, { "id": ":" }, { "id": "BasicGeneral.ArrayMap" }, { "id": "BasicGeneral.ArrayMapCxxDemo" }, { "id": "BasicCxxExamples.IntegerCxxDemo" }, { "id": "Fundamentals.TuplesImplementation" }, { "id": "BasicCxxRaw.StringCxxRawTest" }, { "id": "BasicCxxRaw.FloatCxxRaw;" }, { "id": "Fundamentals.Exponents" }, { "id": "TutorialExamples.Tutorial1Cxx" }, { "id": "BasicCxxExamples.FloatCxxDemo" }, { "id": "." }, { "id": "Collections.DictionaryCxxDemo" }, { "id": "BasicGeneral.ArrayFilterCxxDemo" }, { "id": "Collections.Dictionary" }, { "id": "Mathematics.Field" }, { "id": "BasicCxxRaw.StringCxxRaw" }, { "id": "TutorialExamples.Tutorial5Cxx" }, { "id": "BasicGeneral.Colour" }, { "id": "Indexable.IndexableMap" }, { "id": "BasicCxxRaw.BoundedArrayCxxRawTest" }, { "id": "" }, { "id": "BasicCxxRaw.MultitypeOperationsCxxRawTest" }, { "id": "BasicCxxRaw.BoundedArrayCxxRaw" }, { "id": "BasicCxx.MultitypeOperationsCxx" }, { "id": "BasicCxx.StringCxx" }, { "id": "Fundamentals.Semiring" }, { "id": "Mathematics.Group" }, { "id": "Fundamentals.SymbolRenamings;" }, { "id": "BasicGeneral.FloatOperations" }, { "id": "BasicCxx.IntegerCxx" }, { "id": "BasicGeneral.ArrayNumberCxxDemo" }, { "id": "BasicGeneral.IntegerOperationsCxxDemo" }, { "id": "Mathematics.Array" }, { "id": "BasicGeneral.IntegerOperationsCxx" }, { "id": "TutorialExamples.Tutorial9Cxx" }, { "id": "Collections.LinearCxxDemo" }, { "id": "TutorialExamples.Tutorial6Cxx" }, { "id": "BasicCxxRaw.AdHocPredicate;" }, { "id": "TutorialExamples.Tutorial0Cxx" }, { "id": "Fundamentals.Morphisms;" }, { "id": "TutorialExamples.Tutorial4Cxx" }, { "id": "BasicGeneral.ArrayFilter" }, { "id": "BasicCxxExamples.StringCxxDemo" }, { "id": "BasicGeneral.IndexableWrapper" }, { "id": "BasicCxxRaw.MultitypeOperationsCxxRaw" }, { "id": "Collections.LinearImplementationArray" }, { "id": "TutorialExamples.Tutorial3Cxx" }, { "id": "Collections.Linear;" }, { "id": "BasicCxxRaw.IntegerCxxRaw;" }, { "id": "defines" }, { "id": "contains" }, { "id": "Mathematics.Ring" }, { "id": "BasicCxxRaw.FloatCxxRaw" }, { "id": "BasicCxxExamples.ArrayCxxDemo" }, { "id": "Fundamentals.Lattice" }, { "id": "BasicCxx.DynamicArrayCxx" }] };
        const data = JSON.parse(graph.str);

        const nodes = data.nodes.map(d => ({ ...d })).map(({ id }) => {
          return { id: id.trim().replace(",", "") };
        });

        const links = data.links.map(d => ({ ...d })).map(({ source, target }) => {
          let s = source.trim().replace(",", "");
          let t = target.trim().replace(",", "");
          return { source: s, target: t };
        }).filter(({ source, target }) => {
          return nodes.find(({ id }) => id === target) !== undefined && nodes.find(({ id }) => id === source) !== undefined;
        });

        console.log(nodes, links);

        const simulation = d3.forceSimulation(nodes)
          .force("link", d3.forceLink(links).id(d => d.id))
          .force("charge", d3.forceManyBody())
          .force("center", d3.forceCenter(width / 2, height / 2))
          .force("x", d3.forceX(width / 2).strength(0.075))
          .force("y", d3.forceY(height / 2).strength(0.15))
          .on("tick", ticked)

        const link = svg.append("g")
          .attr("stroke", "#999")
          .attr("stroke-opacity", 0.6)
          .selectAll()
          .data(links)
          .join("line")
          .attr("stroke-width", d => (3 - (d.dist_sqrd / 500) * 2))

        const node = svg.append("g")
          .attr("stroke", "#fff")
          .attr("stroke-width", 1.5)
          .selectAll()
          .data(nodes)
          .join("circle")
          .attr("r", 10)
          .attr("fill", "purple");

        node.append("p")
          .text(d => d.id)
          .attr("class", "node-id");

        node.call(d3.drag()
          .on("start", dragstarted)
          .on("drag", dragged)
          .on("end", dragended));

        function ticked() {
          link
            .attr("x1", d => d.source.x)
            .attr("y1", d => d.source.y)
            .attr("x2", d => d.target.x)
            .attr("y2", d => d.target.y);

          node
            .attr("cx", d => d.x)
            .attr("cy", d => d.y);
        }

        function dragstarted(event) {
          if (!event.active) simulation.alphaTarget(0.3).restart();
          event.subject.fx = event.subject.x;
          event.subject.fy = event.subject.y;
        }

        function dragged(event) {
          event.subject.fx = event.x;
          event.subject.fy = event.y;
        }

        function dragended(event) {
          if (!event.active) simulation.alphaTarget(0);
          event.subject.fx = null;
          event.subject.fy = null;
        }
      }


      async function initGraph() {
        d3.select("#graph")
          .append("svg")
          .attr("width", width)
          .attr("height", height)
          .attr("viewBox", [0, 0, width, height])
          .attr("style", "max-width: 100%; height: auto; height: intrinsic")

        populateGraph();
      }

      initGraph();
    },
  }
);
