stages:
  - linting
  - test
  - svn
  - build

linting-fix:
  stage: linting
  image: neelzee/tauri_img
  only:
    - main
  script:
    - rustup component add clippy
    - cd src-tauri
    - cargo fix --allow-dirty
    - cargo clippy --fix --allow-dirty
    - git config user.email "nfi005@uib.no"
    - git config user.name "ci-bot"
    - git add .
    - git commit -m "Automated fixes by clippy, and cargo fix"
    - git remote add origin main https://oauth2:$PROJECT_TOKEN@git.app.uib.no/Nils.Fitjar/nmide.git
    - git push --set-upstream origin main -o ci.skip # prevent triggering pipeline again

linting:
  stage: linting
  image: neelzee/tauri_img
  script:
    - rustup component add clippy
    - cd src-tauri
    - cargo clippy -- -D clippy::restriction

rust_test:
  stage: test
  image: neelzee/tauri_img
  script:
    - cd src-tauri
    - cargo test

js_test:
  stage: test
  image: neelzee/tauri_img
  script:
    - yarn install
    - yarn test


pts:
  stage: svn
  image: neelzee/tauri_img
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: always
  dependencies:
    - "js_test"
    - "rust_test"
  script:
    - ./pushToSvn.sh

pis:
  stage: svn
  image: neelzee/tauri_img
  rules:
    - if: '$CI_PIPELINE_SOURCE == "merge_request_event" && $CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main"'
      when: always
  dependencies:
    - "js_test"
    - "rust_test"
  script:
    - ./issueGen.sh "https://git.app.uib.no/api/v4/projects/Nils.Fitjar%f2Nmide/issues"




windows-build:
  stage: build
  image: neelzee/tauri_img
  dependencies:
    - "pts"
  when: manual
  only:
    - main
  script:
    - yarn install
    - cargo install cargo-xwin
    - rustup component add clippy
    - cd src-tauri
    - cargo clippy --fix --bin "nmide"
    - cd ..
    - yarn tauri build --runner cargo-xwin --target x86_64-pc-windows-msvc

debian-build:
  stage: build
  image: neelzee/tauri_img
  dependencies:
    - "pts"
  when: manual
  only:
    - main
  script:
    - yarn install
    - yarn tauri build

mac-build:
  stage: build
  image: neelzee/tauri_img
  dependencies:
    - "pts"
  when: manual
  only:
    - main
  script:
    - echo "TODO"
