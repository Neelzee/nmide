/* tslint:disable */
/* eslint-disable */
/**
 * nmide API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ModelFile
 */
export interface ModelFile {
    /**
     * 
     * @type {string}
     * @memberof ModelFile
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof ModelFile
     */
    path: string;
    /**
     * 
     * @type {string}
     * @memberof ModelFile
     */
    extension: string;
    /**
     * 
     * @type {string}
     * @memberof ModelFile
     */
    symbol: string;
}

/**
 * Check if a given object implements the ModelFile interface.
 */
export function instanceOfModelFile(value: object): value is ModelFile {
    if (!('name' in value) || value['name'] === undefined) return false;
    if (!('path' in value) || value['path'] === undefined) return false;
    if (!('extension' in value) || value['extension'] === undefined) return false;
    if (!('symbol' in value) || value['symbol'] === undefined) return false;
    return true;
}

export function ModelFileFromJSON(json: any): ModelFile {
    return ModelFileFromJSONTyped(json, false);
}

export function ModelFileFromJSONTyped(json: any, ignoreDiscriminator: boolean): ModelFile {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'],
        'path': json['path'],
        'extension': json['extension'],
        'symbol': json['symbol'],
    };
}

export function ModelFileToJSON(value?: ModelFile | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'path': value['path'],
        'extension': value['extension'],
        'symbol': value['symbol'],
    };
}

