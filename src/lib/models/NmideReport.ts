/* tslint:disable */
/* eslint-disable */
/**
 * nmide API
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface NmideReport
 */
export interface NmideReport {
    /**
     * 
     * @type {string}
     * @memberof NmideReport
     */
    msg: string;
    /**
     * 
     * @type {string}
     * @memberof NmideReport
     */
    lvl: NmideReportLvlEnum;
    /**
     * 
     * @type {Array<string>}
     * @memberof NmideReport
     */
    tag: Array<NmideReportTagEnum>;
    /**
     * 
     * @type {Array<NmideReport>}
     * @memberof NmideReport
     */
    stack: Array<NmideReport>;
    /**
     * 
     * @type {string}
     * @memberof NmideReport
     */
    origin: string;
}


/**
 * @export
 */
export const NmideReportLvlEnum = {
    Unknown: 'Unknown',
    Low: 'Low',
    Medium: 'Medium',
    High: 'High'
} as const;
export type NmideReportLvlEnum = typeof NmideReportLvlEnum[keyof typeof NmideReportLvlEnum];

/**
 * @export
 */
export const NmideReportTagEnum = {
    WsError: 'WSError',
    NonSpecified: 'NonSpecified'
} as const;
export type NmideReportTagEnum = typeof NmideReportTagEnum[keyof typeof NmideReportTagEnum];


/**
 * Check if a given object implements the NmideReport interface.
 */
export function instanceOfNmideReport(value: object): value is NmideReport {
    if (!('msg' in value) || value['msg'] === undefined) return false;
    if (!('lvl' in value) || value['lvl'] === undefined) return false;
    if (!('tag' in value) || value['tag'] === undefined) return false;
    if (!('stack' in value) || value['stack'] === undefined) return false;
    if (!('origin' in value) || value['origin'] === undefined) return false;
    return true;
}

export function NmideReportFromJSON(json: any): NmideReport {
    return NmideReportFromJSONTyped(json, false);
}

export function NmideReportFromJSONTyped(json: any, ignoreDiscriminator: boolean): NmideReport {
    if (json == null) {
        return json;
    }
    return {
        
        'msg': json['msg'],
        'lvl': json['lvl'],
        'tag': json['tag'],
        'stack': ((json['stack'] as Array<any>).map(NmideReportFromJSON)),
        'origin': json['origin'],
    };
}

export function NmideReportToJSON(value?: NmideReport | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'msg': value['msg'],
        'lvl': value['lvl'],
        'tag': value['tag'],
        'stack': ((value['stack'] as Array<any>).map(NmideReportToJSON)),
        'origin': value['origin'],
    };
}

